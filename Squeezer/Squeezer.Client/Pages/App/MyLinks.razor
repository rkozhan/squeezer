@page "/app/my-links";
@using Squeezer.Client.Layout

@rendermode @(new InteractiveAutoRenderMode(prerender: false))

@layout InteractiveMainLayout

@inject NavigationManager NavigationManager
@inject ILinkService LinkService

<PageTitle>My Links | Squeezer</PageTitle>

<SectionContent SectionName="client-heading">
    <h1 class="text-main fw-bold text-center">My Links</h1>
</SectionContent>

@if (_isLoading)
{
    <Loader />
}
else
{
    <div class="row">
        @foreach (var link in _links)
        {
            <div class="p-2 mb-4 border-borrom shadow">
                <div class="row">
                    <div class="col-sm-6 d-flex">
                        <div class="d-flex flex-column justify-content-center">
                            @if (link.IsActive)
                            {
                                <i class="material-symbols-outlined text-success fw-bold" title="Active">link</i>
                            }
                            else
                            {
                                <i class="material-symbols-outlined text-danger fw-bold" title="Inactive">link_off</i>
                            }
                        </div>
                        <div class="vr mx-3"></div>
                        <div class="flex-grow-1">
                            <h5>
                                <a href="@link.ShortUrl" target="_blank"
                                    class="link-dark" title="@link.ShortUrl">
                                    @link.ShortUrl
                                </a>
                                <button type="button" class="btn" title="Copy Short Url to Clipboard">
                                    <i class="material-symbols-outlined">content_copy</i>
                                </button>
                            </h5>
                            <small class="d-flex">
                                <span>Long Url:
                                    <a href="@link.LongUrl" target="_blank"
                                       class="link-dark" title="@link.LongUrl">
                                        @link.LongUrl
                                    </a>
                                </span>
                                <button type="button" class="btn" title="Copy Long Url to Clipboard">
                                    <i class="material-symbols-outlined">content_copy</i>
                                </button>
                            </small>
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <h5>Total Clicks: @link.TotalClicks</h5>
                        <a href="/app/my-links/@link.Id" class="btn btn-main d-flex" style="text-decoration:none;" >
                            <i class="material-symbols-outlined me-1">content_copy</i>
                            <span>View Details</span>
                        </a>
                    </div>
                    <div class="col-sm-3 d-flex flex-column justify-content-center align-items-center gap-2">
                        <button type="button" class="btn btn-outline-primary d-flex" title="Edit Url">
                            <i class="material-symbols-outlined me-1">edit</i>
                            <span>Edit</span>
                        </button>

                        <button type="button" class="btn btn-outline-danger d-flex" title="Delete Url">
                            <i class="material-symbols-outlined me-1">delete</i>
                            <span>Delete</span>
                        </button>

                        <button disabled type="button" class="btn btn-outline-dark d-flex" title="Generate QR-code for a Short Url">
                            <i class="material-symbols-outlined me-1">qr_code</i>
                            <span>Get QR</span>
                        </button>
                    </div>


                </div>
            </div>
        }
    </div>
}

@code {
    private bool _isLoading = false;
    private LinkDto[] _links = [];
    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        (_links, var count) = await LinkService.GetLinksByUserAsync("", 0, 10, false);
        _isLoading = false;
    }
}
